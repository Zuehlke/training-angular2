diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/README.md Exercises/Exercise_08/Before/README.md
1,2c1,3
< ## Exercise 8: Result ##
< This folder contains the application as it is after you have completed this exercise.
\ No newline at end of file
---
> ## Exercise 8: Starting Point ##
> 
> This folder contains the application as it is before you start with this exercise.
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/app/components/navmenu.component.html Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/app/components/navmenu.component.html
24a25
>                 <li class="divider" *ngIf="isLoggedIn"></li>
26c27
<                     <a (click)="logout()" href="">
---
>                     <a (click)="logout()">
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/app/services/auth.service.ts Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/app/services/auth.service.ts
21c21
<     constructor(private router: Router) {
---
>     constructor(private router:Router){
26c26
<     }
---
>     }    
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-add.component.html Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-add.component.html
4c4,7
<         <expense-form [expense]="expense" [(isFormValidOrPristine)]="isFormValidOrPristine"></expense-form>
---
>         <div class="alert alert-danger" *ngIf="errorMessage" role="alert">
>             <strong>Oh snap!</strong> {{errorMessage}}
>         </div>
>         <expense-form [expense]="expense"></expense-form>
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-add.component.ts Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-add.component.ts
1d0
< import { IExpenseDetail } from './expense-detail.interface';
11c10
< export class ExpenseAddComponent implements IExpenseDetail {
---
> export class ExpenseAddComponent {
13a13
>     errorMessage: string;
15,17c15
<     isFormValidOrPristine: boolean;
< 
<     constructor(private router: Router, private expenseService: ExpenseService) { }
---
>     constructor(private router: Router, private expenseService: ExpenseService) {}
20,21c18,23
<         await this.expenseService.createExpense(this.expense);
<         this.goBack();
---
>         try {
>             await this.expenseService.createExpense(this.expense);
>             this.goBack();
>         } catch(response){
>              this.handleError(response) ;
>         }
26a29,32
> 
>     private handleError(response: Response): void {
>         this.errorMessage = `The remote server returned HTTP ${response.status}: ${response.statusText}`;
>     }
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.component.html Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.component.html
3a4,6
>         <div class="alert alert-danger" *ngIf="errorMessage" role="alert">
>             <strong>Oh snap!</strong> {{errorMessage}}
>         </div>
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.component.ts Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.component.ts
8d7
< import { IExpenseDetail } from './expense-detail.interface';
13c12
< export class ExpenseDetailComponent implements OnInit, OnDestroy, IExpenseDetail {
---
> export class ExpenseDetailComponent implements OnInit, OnDestroy {
16a16
>     errorMessage: string;
38,39c38,43
<         await this.expenseService.updateExpense(this.expense);
<         this.goBack();
---
>         try {
>             await this.expenseService.updateExpense(this.expense);
>             this.goBack();
>         } catch (response) {
>             this.handleError(response);
>         }
47c51,55
<         this.expense = await this.expenseService.getExpense(id);
---
>         try {
>             this.expense = await this.expenseService.getExpense(id);
>         } catch (response) {
>             this.handleError(response);
>         }
49a58,60
>     private handleError(response: Response): void {
>         this.errorMessage = `The remote server returned HTTP ${response.status}: ${response.statusText}`;
>     }
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.interface.ts Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.interface.ts
1,3d0
< export interface IExpenseDetail {
<     isFormValidOrPristine: boolean;
< }
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.html Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.html
14a15,17
>             <div class="alert alert-danger" *ngIf="errorMessage" role="alert">
>                 <strong>Oh snap!</strong> {{errorMessage}}
>             </div>
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.ts Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.ts
12a13
>     errorMessage: string;
17c18,22
<         this.expenses = await this.expenseService.getExpenses();
---
>         try {
>             this.expenses = await this.expenseService.getExpenses();
>         } catch (response) {
>             this.handleError(response);
>         }
21,22c26,35
<         await this.expenseService.deleteExpense(expense);
<         this.expenses = this.expenses.filter(exp => exp.id !== expense.id);
---
>         try {
>             await this.expenseService.deleteExpense(expense);
>             this.expenses = this.expenses.filter(exp => exp.id !== expense.id);
>         } catch (response) {
>             this.handleError(response);
>         }
>     }
> 
>     private handleError(response: Response): void {
>         this.errorMessage = `The remote server returned HTTP ${response.status}: ${response.statusText}`;
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.module.ts Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.module.ts
1,2d0
< import { FormGuard } from './guards/form.guard';
< import { LoginGuard } from './guards/login.guard';
30,32c28
<         ExpenseService,
<         LoginGuard,
<         FormGuard
---
>         ExpenseService
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.routing.ts Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.routing.ts
1,2d0
< import { LoginGuard } from './guards/login.guard';
< import { FormGuard } from './guards/form.guard';
13d10
<         canActivate: [LoginGuard],
16,17c13,14
<             { path: 'add', component: ExpenseAddComponent, canDeactivate: [FormGuard] },
<             { path: ':id', component: ExpenseDetailComponent, canDeactivate: [FormGuard] }
---
>             { path: 'add', component: ExpenseAddComponent },
>             { path: ':id', component: ExpenseDetailComponent }
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/guards/form.guard.ts Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/guards/form.guard.ts
1,16d0
< import { IExpenseDetail } from './../components/expense-detail.interface';
< import { CanDeactivate } from '@angular/router';
< import { Injectable } from '@angular/core';
< import { ExpenseDetailComponent } from "../components/expense-detail.component";
< 
< @Injectable()
< export class FormGuard implements CanDeactivate<IExpenseDetail> {
< 
<     canDeactivate(component: IExpenseDetail) {
<         if (!component) {
<             return true;
<         }
<         return component.isFormValidOrPristine;
<     }
< 
< }
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/guards/login.guard.ts Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/guards/login.guard.ts
1,18d0
< import { CanActivate, Router } from '@angular/router';
< import { Injectable } from '@angular/core';
< import { AuthService } from '../../app/services/auth.service';
< 
< @Injectable()
< export class LoginGuard implements CanActivate {
< 
<     constructor(private loginService: AuthService, private router: Router) { }
< 
<     canActivate() {
<         if (!this.loginService.isAuthorized) {
<             this.router.navigate(["/home"]);
<             return false;
<         }
< 
<         return true;
<     }
< }
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/services/expense.service.ts Exercises/Exercise_08/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/services/expense.service.ts
14c14
<     constructor(private http: Http) { }
---
>     constructor(private http: Http) {}
18,19c18,19
<             .map(response => response.json() || [])
<             .toPromise();
---
>                         .map(response => response.json() || [])
>                         .toPromise();
24,25c24,25
<             .map(response => response.json())
<             .toPromise();
---
>                         .map(response => response.json())
>                         .toPromise();
28,31c28,30
<     async updateExpense(expense: ExpenseRecord): Promise<Response> {
<         return await this.http
<                 .put(`${this.expenseUrl}/${expense.id}`, expense)
<                 .toPromise();
---
>     updateExpense(expense: ExpenseRecord): Promise<Response> {
>         return this.http.put(`${this.expenseUrl}/${expense.id}`, expense)
>                         .toPromise();
34,37c33,36
<     async createExpense(expense: ExpenseRecord): Promise<Response> {
<         return await this.http
<                 .post(this.expenseUrl, expense)
<                 .toPromise();
---
>     createExpense(expense: ExpenseRecord): Promise<Response> {
>         expense.id = this.generateGuid();
>         return this.http.post(this.expenseUrl, expense)
>                         .toPromise();
40,43c39,41
<     async deleteExpense(expense: ExpenseRecord): Promise<Response> {
<         return await this.http
<                 .delete(`${this.expenseUrl}/${expense.id}`)
<                 .toPromise();
---
>     deleteExpense(expense: ExpenseRecord): Promise<Response> {
>         return this.http.delete(`${this.expenseUrl}/${expense.id}`)
>                         .toPromise();
48,49c46,47
<             var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
<             return v.toString(16);
---
> 			var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
> 			return v.toString(16);
