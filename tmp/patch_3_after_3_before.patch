diff -Nr -X ./ignore_patterns Exercises/Exercise_03/After/README.md Exercises/Exercise_03/Before/README.md
1c1
< ## Exercise 3: Result ##
---
> ## Exercise 3: Starting Point ##
3c3
< This folder contains the application as it is after you have completed this exercise.
\ No newline at end of file
---
> This folder contains the application as it is before you start with this exercise.
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.css Exercises/Exercise_03/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.css
1,6d0
< ﻿a.delete {
<   cursor: pointer;
< }
< a.delete:hover {
<     text-decoration: none;
< }
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.html Exercises/Exercise_03/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.html
15,17d14
<             <div class="alert alert-danger" *ngIf="errorMessage" role="alert">
<                 <strong>Oh snap!</strong> {{errorMessage}}
<             </div>
23,29c20,25
<             <tr>
<                 <th>From</th>
<                 <th>Date</th>
<                 <th>Amount</th>
<                 <th>For what</th>
<                 <th></th>
<             </tr>
---
>         <tr>
>             <th>From</th>
>             <th>Date</th>
>             <th>Amount</th>
>             <th>For what</th>
>         </tr>
32,38c28,33
<             <tr *ngFor="let expense of expenses | expenseFilter:expenseFilterInput">
<                 <td>{{ expense.name | uppercase }}</td>
<                 <td>{{ expense.date | date:"yyyy-MM-dd" }}</td>
<                 <td>{{ expense.amount | currency:"EUR":true }}</td>
<                 <td>{{ expense.reason }}</td>
<                 <td><a class="glyphicon glyphicon-remove delete" (click)="deleteExpense(expense)"></a></td>
<             </tr>
---
>         <tr *ngFor="let expense of expenses | expenseFilter:expenseFilterInput">
>             <td>{{ expense.name | uppercase }}</td>
>             <td>{{ expense.date | date:"yyyy-MM-dd" }}</td>
>             <td>{{ expense.amount | currency:"EUR":true }}</td>
>             <td>{{ expense.reason }}</td>
>         </tr>
diff -Nr -X ./ignore_patterns Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.ts Exercises/Exercise_03/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.ts
8d7
<     styles: [require('./expense-overview.component.css')]
13d11
<     errorMessage: string;
15c13
<     constructor(private expenseService: ExpenseService) { }
---
>     constructor(private expenseService: ExpenseService) {}
18,35c16
<         try {
<             this.expenses = await this.expenseService.getExpenses();
<         } catch (response) {
<             this.handleError(response);
<         }
<     }
< 
<     async deleteExpense(expense: ExpenseRecord): Promise<any> {
<         try {
<             await this.expenseService.deleteExpense(expense);
<             this.expenses = this.expenses.filter(exp => exp.id !== expense.id);
<         } catch (response) {
<             this.handleError(response);
<         }
<     }
< 
<     private handleError(response: Response): void {
<         this.errorMessage = `The remote server returned HTTP ${response.status}: ${response.statusText}`;
---
>         this.expenses = await this.expenseService.getExpenses();
diff -Nr -X ./ignore_patterns Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/services/expense.service.ts Exercises/Exercise_03/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/services/expense.service.ts
21,25d20
< 
<     deleteExpense(expense: ExpenseRecord): Promise<Response> {
<         return this.http.delete(`${this.expenseUrl}/${expense.id}`)
<                         .toPromise();
<     }
diff -Nr -X ./ignore_patterns Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/Controllers/ExpenseController.cs Exercises/Exercise_03/Before/Zuehlke.ExpenseReporting/Controllers/ExpenseController.cs
1,2c1
< ﻿using System;
< using System.Collections.Generic;
---
> ﻿using System.Collections.Generic;
35,56d33
< 
<         /// <summary>
<         /// Removes the expense record with the specified id from the database.
<         /// </summary>
<         /// <param name="id">Unique id of the record to be deleted</param>
<         /// <returns>
<         /// HTTP 204 to indicate that the provided record has been deleted 
<         /// and is no longer available in the database,
<         /// HTTP 404 if the requested record was not found.</returns>
<         [HttpDelete("{id}")]
<         public IActionResult Delete(Guid id)
<         {
<             try
<             {
<                 this.repository.Delete(id);
<                 return this.NoContent();
<             }
<             catch (InvalidOperationException)
<             {
<                 return this.NotFound();
<             }
<         }
