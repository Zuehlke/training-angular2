diff -Nr -X ./ignore_patterns Exercises/Exercise_05/Before/README.md Exercises/Exercise_04/After/README.md
1c1
< ## Exercise 5: Starting Point ##
---
> ## Exercise 4: Result ##
3c3
< This folder contains the application as it is before you start with this exercise.
\ No newline at end of file
---
> This folder contains the application as it is after you have completed this exercise.
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_05/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-add.component.html Exercises/Exercise_04/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-add.component.html
1,12d0
< <div class="panel panel-primary">
<     <div class="panel-heading">Add new Receipt</div>
<     <div class="panel-body">
<         <div class="alert alert-danger" *ngIf="errorMessage" role="alert">
<             <strong>Oh snap!</strong> {{errorMessage}}
<         </div>
<         <expense-form [expense]="expense"></expense-form>
<     </div>
<     <div class="panel-footer">
<         <a class="btn btn-default" (click)="goBack()"><i class="glyphicon glyphicon-chevron-left"></i> Back to Overview</a>
<     </div>
< </div>
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_05/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-add.component.ts Exercises/Exercise_04/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-add.component.ts
1,24d0
< import { Component, OnInit } from '@angular/core';
< import { Response } from '@angular/http';
< import { Router } from '@angular/router';
< import { ExpenseRecord } from '../model/expense';
< import { ExpenseService } from '../services/expense.service';
< 
< @Component({
<     template: require('./expense-add.component.html')
< })
< export class ExpenseAddComponent {
< 
<     expense: ExpenseRecord = new ExpenseRecord(null, null, null, new Date(Date.now()), 0, null);
<     errorMessage: string;
< 
<     constructor(private router: Router, private expenseService: ExpenseService) {}
< 
<     goBack(): void {
<         this.router.navigate(['/expense']);
<     }
< 
<     private handleError(response: Response): void {
<         this.errorMessage = `The remote server returned HTTP ${response.status}: ${response.statusText}`;
<     }
< }
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_05/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.css Exercises/Exercise_04/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.css
1c1
< a.delete {
---
> ï»¿a.delete {
diff -Nr -X ./ignore_patterns Exercises/Exercise_05/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.html Exercises/Exercise_04/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.html
45,46d44
<     <div class="panel-footer">
<     </div>
diff -Nr -X ./ignore_patterns Exercises/Exercise_05/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.module.ts Exercises/Exercise_04/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.module.ts
8d7
< import { ExpenseAddComponent } from './components/expense-add.component';
23d21
<         ExpenseAddComponent,
diff -Nr -X ./ignore_patterns Exercises/Exercise_05/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.routing.ts Exercises/Exercise_04/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.routing.ts
6d5
< import { ExpenseAddComponent } from './components/expense-add.component';
diff -Nr -X ./ignore_patterns Exercises/Exercise_05/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/services/expense.service.ts Exercises/Exercise_04/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/services/expense.service.ts
37,43d36
< 	
< 	private generateGuid(): string {
<         return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
< 			var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
< 			return v.toString(16);
<         });
<     }
