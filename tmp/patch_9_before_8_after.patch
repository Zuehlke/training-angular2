diff -Nr -X ./ignore_patterns Exercises/Exercise_09/Before/README.md Exercises/Exercise_08/After/README.md
1,3c1,2
< ## Exercise 9: Starting Point ##
< 
< This folder contains the application as it is before you start with this exercise.
\ No newline at end of file
---
> ## Exercise 8: Result ##
> This folder contains the application as it is after you have completed this exercise.
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_09/Before/Zuehlke.ExpenseReporting/ClientApp/modules/app/app.module.ts Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/app/app.module.ts
1d0
< import { NotificationService } from './services/notification.service';
31,32c30
<         AuthService,
<         NotificationService
---
>         AuthService
diff -Nr -X ./ignore_patterns Exercises/Exercise_09/Before/Zuehlke.ExpenseReporting/ClientApp/modules/app/components/home.component.spec.ts Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/app/components/home.component.spec.ts
8,12d7
< 
< import { Router } from '@angular/router';
< import { RouterStub } from '../../../utils/testutils';
< 
< import { NotificationService } from '../services/notification.service';
14a10,12
> import { ActivatedRoute, Router } from '@angular/router';
> import { ActivatedRouteStub, RouterStub } from '../../../utils/testutils';
> 
19a18
>     let authService: AuthService;
29c28
<             providers: [{provide: Router, class: RouterStub}, AuthService, NotificationService]
---
>             providers: [AuthService, { provide: Router, useClass: RouterStub }]
diff -Nr -X ./ignore_patterns Exercises/Exercise_09/Before/Zuehlke.ExpenseReporting/ClientApp/modules/app/services/auth.service.ts Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/app/services/auth.service.ts
3d2
< import { NotificationService } from './notification.service';
22c21
<     constructor(private router: Router, private notify: NotificationService) {
---
>     constructor(private router: Router) {
27d25
<         this.notify.success("You are now logged in!");
32d29
<         this.notify.info("You have successfully logged out!");
diff -Nr -X ./ignore_patterns Exercises/Exercise_09/Before/Zuehlke.ExpenseReporting/ClientApp/modules/app/services/notification.service.ts Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/app/services/notification.service.ts
1,18d0
< import { Injectable, ViewContainerRef } from '@angular/core';
< 
< @Injectable()
< export class NotificationService {
< 
<     info(message: string): void {
<         alert(`INFO: ${message}`);
<     }
<     warning(message: string): void {
<         alert(`WARNING: ${message}`);
<     }
<     error(message: string): void {
<         alert(`ERROR: ${message}`);
<     }
<     success(message: string): void {
<         alert(`SUCCESS: ${message}`);
<     }
< }
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_09/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-add.component.spec.ts Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-add.component.spec.ts
19,20d18
< import { NotificationService } from './../../app/services/notification.service';
< 
38c36
<             providers: [ExpenseService, NotificationService, FormBuilder, { provide: Router, useClass: RouterStub }]
---
>             providers: [ExpenseService, FormBuilder, { provide: Router, useClass: RouterStub }]
diff -Nr -X ./ignore_patterns Exercises/Exercise_09/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.component.spec.ts Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.component.spec.ts
19,20d18
< import { NotificationService } from './../../app/services/notification.service';
< 
41c39
<             providers: [NotificationService, ExpenseService, FormBuilder, { provide: ActivatedRoute, useValue: activatedRoute }, { provide: Router, useClass: RouterStub }]
---
>             providers: [ExpenseService, FormBuilder, { provide: ActivatedRoute, useValue: activatedRoute }, { provide: Router, useClass: RouterStub }]
73d70
<         await fixture.whenStable();
diff -Nr -X ./ignore_patterns Exercises/Exercise_09/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.spec.ts Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.spec.ts
16,17d15
< import { NotificationService } from './../../app/services/notification.service';
< 
45,46c43
<                 ExpenseService,
<                 NotificationService
---
>                 ExpenseService
diff -Nr -X ./ignore_patterns Exercises/Exercise_09/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/guards/form.guard.ts Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/guards/form.guard.ts
2d1
< import { NotificationService } from './../../app/services/notification.service';
10,12d8
<     constructor(private notify: NotificationService) {
<     }
< 
17,19d12
<         if (!component.isFormValidOrPristine) {
<             this.notify.warning("Please ensure the data on this form is valid before navigating away!");
<         }
diff -Nr -X ./ignore_patterns Exercises/Exercise_09/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/guards/login.guard.ts Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/guards/login.guard.ts
1d0
< import { NotificationService } from './../../app/services/notification.service';
9c8
<     constructor(private loginService: AuthService, private router: Router, private notify: NotificationService) { }
---
>     constructor(private loginService: AuthService, private router: Router) { }
13d11
<             this.notify.error("You are not authorized to view this page. Pleas log-in first!");
diff -Nr -X ./ignore_patterns Exercises/Exercise_09/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/services/expense.service.ts Exercises/Exercise_08/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/services/expense.service.ts
1d0
< import { NotificationService } from './../../app/services/notification.service';
15c14
<     constructor(private http: Http, private notify: NotificationService) { }
---
>     constructor(private http: Http) { }
30,32c29
<         var result: Response;
<         try {
<             result = await this.http
---
>         return await this.http
35,39d31
<             this.notify.success(`Expense ${expense.id} updated successfully.`);
<         } catch (response) {
<             this.handleError(`Error updating expense ${expense.id}.`, response);
<         }
<         return result;
43,46c35
<         var result: Response;
<         try {
<             expense.id = this.generateGuid();
<             result = await this.http
---
>         return await this.http
49,58d37
<             this.notify.success(`Expense ${expense.id} created successfully.`);
<         } catch (response) {
<             if (response.status === 409) {
<                 this.notify.warning(`An expense with id ${expense.id} already exists.`);
<             } else {
<                 this.handleError(`Error creating expense ${expense.id}.`, response);
<             }
<             result = response;
<         }
<         return result;
62,64c41
<         var result: Response;
<         try {
<             result = await this.http
---
>         return await this.http
67,76d43
<             this.notify.success(`Expense ${expense.id} deleted successfully.`);
<         } catch (response) {
<             this.handleError(`Error deleting expense ${expense.id}.`, response);
<             result = response;
<         }
<         return result;
<     }
< 
<     private handleError(message: string, response: Response) {
<         this.notify.error(`${message}: The remote server returned HTTP ${response.status}: ${response.statusText}`);
