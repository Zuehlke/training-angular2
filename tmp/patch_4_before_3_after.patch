diff -Nr -X ./ignore_patterns Exercises/Exercise_04/Before/README.md Exercises/Exercise_03/After/README.md
1c1
< ## Exercise 4: Starting Point ##
---
> ## Exercise 3: Result ##
3c3
< This folder contains the application as it is before you start with this exercise.
\ No newline at end of file
---
> This folder contains the application as it is after you have completed this exercise.
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_04/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.component.html Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.component.html
1,12d0
< <div class="panel panel-primary" *ngIf="expense">
<     <div class="panel-heading">Receipt from {{ expense.name }}</div>
<     <div class="panel-body">
<         <div class="alert alert-danger" *ngIf="errorMessage" role="alert">
<             <strong>Oh snap!</strong> {{errorMessage}}
<         </div>
< 
<     </div>
<     <div class="panel-footer">
<         <a class="btn btn-default" (click)="goBack()"><i class="glyphicon glyphicon-chevron-left"></i> Back to Overview</a>
<     </div>
< </div>
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_04/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.component.ts Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-detail.component.ts
1,47d0
< import { Component, OnInit, OnDestroy } from '@angular/core';
< import { Router, ActivatedRoute } from '@angular/router';
< import { Response } from '@angular/http';
< import { Subscription } from 'rxjs/Subscription';
< 
< import { ExpenseRecord } from '../model/expense';
< import { ExpenseService } from '../services/expense.service';
< 
< @Component({
<     template: require('./expense-detail.component.html')
< })
< export class ExpenseDetailComponent implements OnInit, OnDestroy {
< 
<     expense: ExpenseRecord;
<     private sub: Subscription;
<     errorMessage: string;
< 
<     constructor(private route: ActivatedRoute, private router: Router, private expenseService: ExpenseService) { }
< 
<     ngOnInit(): void {
<         this.sub = this.route.params.subscribe(
<             params => {
<                 const id = params['id'];
<                 this.getExpense(id);
<             });
<     }
< 
<     ngOnDestroy(): void {
<         this.sub.unsubscribe();
<     }
< 
<     goBack(): void {
<         this.router.navigate(['/expense']);
<     }
< 
<     private async getExpense(id: string): Promise<any> {
<         try {
<             this.expense = await this.expenseService.getExpense(id);
<         } catch (response) {
<             this.handleError(response);
<         }
<     }
< 
<     private handleError(response: Response): void {
<         this.errorMessage = `The remote server returned HTTP ${response.status}: ${response.statusText}`;
<     }
< }
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_04/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-form.component.html Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-form.component.html
1,32d0
< <form class="form-horizontal" role="form" #expenseForm="ngForm">
< 
<     <div class="form-group">
<         <label for="name" class="col-sm-1 control-label">Name</label>
<         <div class="col-sm-11">
<             <input [(ngModel)]="expense.name" type="text" class="form-control" id="name" name="name" required placeholder="Name">
<         </div>
<     </div>
< 
<     <div class="form-group">
<         <label for="date" class="col-sm-1 control-label">Date</label>
<         <div class="col-sm-4">
<             <input [ngModel]="expense.date | date:'y-MM-dd'" (ngModelChange)="expense.date = $event" name="date" type="date" class="form-control" id="date" required placeholder="Date">
<         </div>
<     </div>
< 
< 
< 
< 
< 
< 
<     <div class="form-group">
<         <label for="reason" class="col-sm-1 control-label">Reason</label>
<         <div class="col-sm-4">
<             <select [(ngModel)]="expense.reason" class="form-control" id="reason" name="reason" required>
<                 <option [selected]="expense.reason === 'Flight'" [value]="'Flight'">Flight</option>
< 
< 
<             </select>
<         </div>
<     </div>
< </form>
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_04/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-form.component.ts Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-form.component.ts
1,17d0
< import { Component, Input } from '@angular/core';
< import { Router } from '@angular/router';
< import { Observable } from 'rxjs/Observable';
< 
< import { ExpenseRecord } from '../model/expense';
< import { ExpenseService } from '../services/expense.service';
< 
< @Component({
<     selector: 'expense-form',
<     template: require('./expense-form.component.html')
< })
< export class ExpenseFormComponent {
< 
<     @Input()
<     expense: ExpenseRecord;
< 
< }
\ No newline at end of file
diff -Nr -X ./ignore_patterns Exercises/Exercise_04/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.html Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/components/expense-overview.component.html
33,36c33,34
<                 <td>
<                     <a id="{{expense.id}}" [routerLink]="['/expense', expense.id]">{{ expense.name | uppercase }}</a>
<                 </td>
<                 <td>{{ expense.date | date:"dd/MM/yyyy" }}</td>
---
>                 <td>{{ expense.name | uppercase }}</td>
>                 <td>{{ expense.date | date:"yyyy-MM-dd" }}</td>
39,41c37
<                 <td>
<                     <a class="glyphicon glyphicon-remove delete" (click)="deleteExpense(expense); $event.stopPropagation()"></a>
<                 </td>
---
>                 <td><a class="glyphicon glyphicon-remove delete" (click)="deleteExpense(expense)"></a></td>
diff -Nr -X ./ignore_patterns Exercises/Exercise_04/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.module.ts Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.module.ts
7,8d6
< import { ExpenseDetailComponent } from './components/expense-detail.component';
< import { ExpenseFormComponent } from './components/expense-form.component';
20,21d17
<         ExpenseDetailComponent,
<         ExpenseFormComponent,
diff -Nr -X ./ignore_patterns Exercises/Exercise_04/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.routing.ts Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/expense.routing.ts
5d4
< import { ExpenseDetailComponent } from './components/expense-detail.component';
8,14c7
<     {
<         path: 'expense',
<         children: [
<             { path: '', component: ExpenseOverviewComponent },
<             { path: ':id', component: ExpenseDetailComponent }
<         ]
<     }
---
>   { path: 'expense', component: ExpenseOverviewComponent }
diff -Nr -X ./ignore_patterns Exercises/Exercise_04/Before/Zuehlke.ExpenseReporting/ClientApp/modules/expense/services/expense.service.ts Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/ClientApp/modules/expense/services/expense.service.ts
22,27d21
<     getExpense(id: string): Promise<ExpenseRecord> {
<         return this.http.get(`${this.expenseUrl}/${id}`)
<                         .map(response => response.json())
<                         .toPromise();
<     }
< 
diff -Nr -X ./ignore_patterns Exercises/Exercise_04/Before/Zuehlke.ExpenseReporting/Controllers/ExpenseController.cs Exercises/Exercise_03/After/Zuehlke.ExpenseReporting/Controllers/ExpenseController.cs
37,56d36
<         /// Gets a specific expense record identified by its unique id.
<         /// </summary>
<         /// <param name="id">Unique id of the requested expense record.</param>
<         /// <returns>
<         /// HTTP 200 with the requested <see cref="ExpenseRecord"/> entity in the body
<         /// or HTTP 404 if the requested record was not found.
<         /// </returns>
<         [HttpGet("{id}")]
<         [Produces(typeof(ExpenseRecord))]
<         public IActionResult GetById(Guid id)
<         {
<             var expenseRecord = this.repository.FindById(id);
<             if (expenseRecord != null)
<             {
<                 return this.Ok(expenseRecord);
<             }
<             return this.NotFound();
<         }
< 
<         /// <summary>
